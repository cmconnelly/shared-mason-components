<%doc>

$Id$

breadcrumbs HTML::Mason component
Copyright (C) 2005  Claire Connelly

   This program is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License as
   published by the Free Software Foundation; either version 2 of the
   License, or (at your option) any later version.
 
   This program is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.
 
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
   USA
 
This component creates a ``breadcrumb'' list that can be used in
HTML::Mason sites.  It specifies various CSS hooks for styling.

Use:

Put

   <& breadcrumbs &>

in your autohandler file and a breadcrumb list will appear in the
rendered page.

The list is formatted as

   <ul class="breadcrumbs">
   <li class="first"><a href="http://www.my.domain/">Home</a></li>
   <li><a href="http://www.my.domain/topdir/">Top Dir Title</a></li>
   <li><a href="http://www.my.domain/topdir/subdir1/">Subdir Title</a></li>
   <li>Current Page</li>
   </ul>

Titles are obtained from a section method defined in a file called
metadata that can be created in any directory.  If no such file
exists, the breadcrumbs component will attempt to read an index.html
file from each directory and parse that file looking for a title
method.

The ``Home'' link is created for the top of the tree, and cannot
(currently) be changed.

</%doc>
<%init>

### Output debugging information?
my $debug = 0;

### Bring in some information from the master autohandler.
our ($webhostname, $pageuri, $siteroot); 

my $crumbsr = $siteroot;
$crumbsr =~ s|/$||;

if ( $debug > 1 ) {
  print "\$webhostname = $webhostname<br/>\n";
  print "\$pageuri     = $pageuri<br/>\n";
  print "\$siteroot    = $siteroot<br/>\n";
}  


### Get a list of directories in the path to the top of the tree.
my $curpath = $m->request_comp->dir_path;
my @dirs = split ('/', $curpath );
push @dirs, '' unless @dirs;


my $output = join " ", @dirs;

### Assemble the breadcrumb trail.

my @crumbtrail;

while ( @dirs  ) {
  # Loop through our directory list, examining each path.

  my $class;
  my $title;
  my $path = ( join "/", @dirs );
  print "\$path = $path<br/>\n" if ( $debug > 0 );
  if ( $path eq "" ) {
    # If we're at the top, create a link to the home page for the site.
    $title = "Home";
    $class = " class=\"first\"";
    $path  = "/";
  } else {
    # Otherwise, we look for a metadata file or index.html.
    my $crumbmetapath = $path . "/metadata";
    my $crumbpagepath = $path . "/index.html";

    if ( $m->comp_exists($crumbmetapath) ) {
      # If a metadata file exists, parse it and pull out the section 
      #  method to use as a title.
      my $mdcont = $m->fetch_comp($crumbmetapath);
      if ( $mdcont->method_exists('section') ) {
	$title = $mdcont->scall_method('section');
      } 
    } elsif ( $m->comp_exists($crumbpagepath) ) {
      # If not, look for an index.html file, and parse it, pulling out
      #  the title of the page.
      my $pagecontent = $m->fetch_comp($crumbpagepath);
      $title = $pagecontent->scall_method('title');
    }
  }

  # With our crumb title, create a simple list item if the link would be
  #  to the current page, or create a link if the link is to another 
  #  directory or page.
  if ( $path eq $curpath ) {
    push @crumbtrail, "<li$class>$title</li>\n";
  } else {
    print "\$crumbsr = $crumbsr<br/>\n" if ( $debug > 0 );
    my $fulllink = $crumbsr . $path;
    my $crumburi = URI->new_abs ( $fulllink, $siteroot );
    print "\$crumburi = $crumburi<br/>\n" if ( $debug > 0 );
    my $linkuri  = $crumburi->rel( $pageuri );
    print "\linkuri   = $linkuri<br/>\n" if ( $debug > 0 );
    push @crumbtrail, "<li$class><a href=\"$linkuri\">\u$title</a></li>\n";
  }

  # Throw away that bit of the path, and we'll go again.
  pop @dirs;
}

### Actually output the breadcrumb list.
print "<ul class=\"breadcrumbs\">\n";

while ( @crumbtrail ) {
  print ( pop @crumbtrail );
}
print "</ul>\n";
</%init>
